#!/usr/bin/env bash

# mkinst
# Copyright (C) 2018 by Harald Lapp <harald@octris.org>
#
# Tool for building self-contained installers.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

version="0.0.1"
include=""
instshell="/bin/sh"
verbose=true
tempfiles=()

function showusage {
    echo "usage: $(basename $0) [OPTIONS] [--] <source> <target>

Creates a self-contained installer from the specified source and stores it to
the specified target.

ARGUMENTS

    <source>        Expects a file-name, a directory name or '-' for stdin.
                    If the name of a directory is specified, the tool will
                    create a tar archive from it. If the source is no direc-
                    tory an additional custom installer script needs to be
                    added using the options '-s' or '--script'.

    <target>        Either a file-name or '-' for stdout.

OPTIONS

    -q, --quiet     Less verbose output.
    -s, --shell     Shell to use for installer (default: $instshell).
                    Make sure that the shell is available on the target system.
                    The specified path should be valid to use as shebang.
    -i, --include   Additional custom installer script to include. This option
                    is required if the source is either a file or stdin. It is
                    optional if the source is a directory.
    -h, --help      Display this usage information.
        --version   Show version and exit.
"
}

function log {
    if [[ $verbose = true ]]; then
        echo "$@" 1>&2
    fi
}

function addtemp {
    tempfiles="$tempfiles $1"
}

function cleanup {
    local tempfile

    for tempfile in $tempfiles; do
        rm "$tempfile";
    done
}

trap 'cleanup' EXIT HUP INT QUIT TERM

while [[ "${1:0:1}" = "-" ]]; do
    case $1 in
        -)
            break
            ;;
        --)
            shift
            break
            ;;
        -q|--quiet)
            verbose=false
            ;;
        -i|--include)
            include="$2"
            shift
            ;;
        -s|--shell)
            instshell="$2"
            shift
            ;;
        -h|-\?|--help)
            showusage
            exit 1
            ;;
        --version)
            echo $version
            exit 1
            ;;
    esac

    shift
done

if [ "$2" = "" ]; then
    showusage
    exit 1
fi

if [ "$2" = "-" ]; then
    dst=/dev/stdout
elif [ -e "$2" ]; then
    log "Target already exists."
    exit 1
else
    dst="$2"
fi

if [ "$include" != "" ]; then
    if [ ! -f "$include" ] && [ ! -p "$include" ]; then
        log "Unable to acquire custom installer script."
        exit 1
    fi

    include="cat "$include""
fi

if [ "$1" = "-" ] || [ -f "$1" ]; then
    if [ "$include" = "" ]; then
        showusage
        exit 1
    fi

    if [ "$1" = "-" ]; then
        src=$(mktemp 2>/dev/null || mktemp -t "tmp.XXXXXXXXXX")
        addtemp "$src"

        cat - > "$src"
    else
        src="$1"
    fi
elif [ -d "$1" ]; then
    src=$(mktemp 2>/dev/null || mktemp -t "tmp.XXXXXXXXXX")
    addtemp "$src"

    tar cfz "$src" -C "$1" .

    if [ "$include" = "" ]; then
        include="echo tar xfz \$tmp"
    fi
else
    log "Unable to read from source."
    exit 1
fi

check=($(CMD_ENV=xpg4 cksum "$src"))
line=$(($(grep -n "#""MARKER:INSTALLER" "$0" | head -n 1 | cut -d ":" -f 1) + 1))

tmp=$(mktemp 2>/dev/null || mktemp -t "tmp.XXXXXXXXXX")
addtemp "$tmp"

tail +$line "$0" \
    | sed -e "s;%%SUM%%;${check[0]};g" \
        -e "s;%%SIZE%%;${check[1]};g" \
        -e "s;%%SHELL%%;$instshell;g" \
    | cat - <($include) <(echo "exit") > "$tmp"

sed -e "s;%%LINE%%;$(($(cat $tmp | wc -l) + 1));g" "$tmp" | cat - "$src" > "$dst"

if [ -f "$dst" ]; then
    chmod a+x "$dst"
fi

exit

#MARKER:INSTALLER
#!%%SHELL%%

# Created using mkinst - https://github.com/aurora/mkinst/
# This installation script is licensed as MIT, (c) 2018 by Harald Lapp.
#
# This does not apply to the software distributed with this script, which
# is property of the respective owner.
#
tmp=$(mktemp 2>/dev/null || mktemp -t "tmp.XXXXXXXXXX")

trap 'rm -f ${tmp}; exit 1' EXIT HUP INT QUIT TERM

tail +%%LINE%% "$0" > $tmp

scheck=(%%SUM%% %%SIZE%%)
pcheck=($(CMD_ENV=xpg4 cksum "$tmp"))

if [ ${scheck[0]} -ne ${pcheck[0]} ] || [ ${scheck[1]} -ne ${pcheck[1]} ]; then
    log "The installer is corrupted."
    exit 1
fi

