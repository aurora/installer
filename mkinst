#!/usr/bin/env bash

# mkinst
# Copyright (C) 2018 by Harald Lapp <harald@octris.org>
#
# Tool for building self-contained installers.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

version="0.0.1"
include="echo tar xzopPf \$tmp"
instshell="/bin/sh"
verbose=true
compress=6
tempfiles=()

function showusage {
    echo "usage: $(basename $0) [OPTIONS] [--] <target> <source> [<source> ...]

Creates a self-contained installer from the specified sources and stores it to
the specified target.

ARGUMENTS

    <target>            Either a file-name or '-' for stdout.
    <source>            One or multiple file or directory names.

OPTIONS

    -q, --quiet         Less verbose output.
    -s, --shell ARG     Shell to use for installer (default: $instshell).
                        Make sure that the shell is available on the target
                        system. The specified path should be valid to use as
                        shebang.
    -i, --include ARG   Additional custom installer script to include.
    -c, --compress ARG  Compression level (default: $compress). Please see the
                        gzip man pages for details.
    -h, --help          Display this usage information.
        --version       Show version and exit.
"
}

function log {
    if [[ $verbose = true ]]; then
        echo "$@" 1>&2
    fi
}

function addtemp {
    tempfiles="$tempfiles $1"
}

function cleanup {
    local tempfile

    for tempfile in $tempfiles; do
        rm "$tempfile";
    done
}

trap 'code=$? ; cleanup ; exit $code' EXIT HUP INT QUIT TERM

while [[ "${1:0:1}" = "-" ]]; do
    case $1 in
        -)
            break
            ;;
        --)
            shift
            break
            ;;
        -q|--quiet)
            verbose=false
            ;;
        -c|--compress)
            if ! [[ $2 =~ ^[1-9]$ ]] ; then
               log "Invalid compression level."
               exit 1
            fi

            compress=$2
            shift
            ;;
        -i|--include)
            if [ "$2" = "" ]; then
                log "Custom installer script is missing."
                exit 1
            elif [ ! -f "$2" ] && [ ! -p "$2" ]; then
                log "Unable to acquire custom installer script."
                exit 1
            fi

            include="cat "$include""
            shift
            ;;
        -s|--shell)
            instshell="$2"
            shift
            ;;
        -h|-\?|--help)
            showusage
            exit 1
            ;;
        --version)
            echo $version
            exit 1
            ;;
    esac

    shift
done

if [ "$2" = "" ]; then
    showusage
    exit 1
fi

if [ "$1" = "-" ]; then
    dst=/dev/stdout
elif [ -e "$1" ]; then
    log "Target already exists."
    exit 1
else
    dst="$1"
fi

shift

error=false

for i in $@; do
    if [ ! -f "$i" ] && [ ! -d "$i" ]; then
        log "No such file or directory: $i"
        error=true
    fi
done

if [[ $error = true ]]; then
    log "Exiting with failure status due to previous errors."
    exit 1
fi

src=$(mktemp 2>/dev/null || mktemp -t "tmp.XXXXXXXXXX")
addtemp "$src"

tar cf - $@ | gzip -$compress > "$src"

check=($(CMD_ENV=xpg4 cksum "$src"))
line=$(($(grep -n "#""MARKER:INSTALLER" "$0" | head -n 1 | cut -d ":" -f 1) + 1))

tmp=$(mktemp 2>/dev/null || mktemp -t "tmp.XXXXXXXXXX")
addtemp "$tmp"

tail +$line "$0" \
    | sed -e "s;%%SUM%%;${check[0]};g" \
        -e "s;%%SIZE%%;${check[1]};g" \
        -e "s;%%SHELL%%;$instshell;g" \
    | cat - <($include) <(echo "exit") > "$tmp"

extract="tail +$(($(cat $tmp | wc -l) + 1)) \$0"

sed -e "s;%%EXTRACT%%;$extract;g" "$tmp" | cat - "$src" > "$dst"

if [ -f "$dst" ]; then
    chmod a+x "$dst"
fi

exit

#MARKER:INSTALLER
#!%%SHELL%%

# Created using mkinst - https://github.com/aurora/mkinst/
# This installation script is licensed unter the MIT, (c) 2018 by Harald Lapp.
#
# This does not apply to the software distributed with this script, which
# is property of its respective owner.
#
tmp=$(mktemp 2>/dev/null || mktemp -t "tmp.XXXXXXXXXX")

trap 'code=$? ; rm -f ${tmp} ; exit $code' EXIT HUP INT QUIT TERM

%%EXTRACT%% > $tmp

scheck=(%%SUM%% %%SIZE%%)
pcheck=($(CMD_ENV=xpg4 cksum "$tmp"))

if [ ${scheck[0]} -ne ${pcheck[0]} ] || [ ${scheck[1]} -ne ${pcheck[1]} ]; then
    echo "The installer is corrupted." 1>&2
    exit 1
fi

